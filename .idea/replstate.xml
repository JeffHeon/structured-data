<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1387465284329">{:repl-history {:ide [], :local [&quot;(do-a-thing 3)&quot; &quot;(do-a-thing 2)&quot; &quot;(spiff [1 2 3]) &quot; &quot;(spiff [1 2]) &quot; &quot;(cutify [:Jeff])&quot; &quot;(spiff-destructuring [1 2 3])&quot; &quot;(point 5 8)&quot; &quot;(height (rectangle [1 1] [5 1]))&quot; &quot;(width (rectangle [1 1] [5 1]))&quot; &quot;(square? (rectangle [1 1] [1 1]))&quot; &quot;(square? (rectangle [3 2] [1 1]))&quot; &quot;(widt (rectangle [3 2] [1 1]))&quot; &quot;(width (rectangle [3 2] [1 1]))&quot; &quot;(height (rectangle [3 2] [1 1]))&quot; &quot;(height (rectangle [3 2] [1 0]))&quot; &quot;(square? (rectangle [3 2] [1 0]))&quot; &quot;(square? (rectangle [3 0] [1 2]))&quot; &quot;(area (rectangle [3 1] [10 4])) =&gt; 21\n&quot; &quot;(area (rectangle [3 1] [10 4]))\n&quot; &quot;(contains-point? (rectangle [0 0] [2 2])\n                 (point 1 1))&quot; &quot;(contains-point? (rectangle [0 0] [2 2])\n                 (point 1 3)) &quot; &quot;(contains-rectangle? (rectangle [0 0] [1 1])\n                     (rectangle [0 0] [1 1]))&quot; &quot;(contains-rectangle? (rectangle [0 0] [1 1])\n                     (rectangle [1 1] [2 2]))&quot; &quot;(count \&quot;Erme\&quot;)&quot; &quot;(def china {:name \&quot;China Miéville\&quot;, :birth-year 1972})\n(def octavia {:name \&quot;Octavia E. Butler\&quot;\n              :birth-year 1947\n              :death-year 2006})\n(def friedman {:name \&quot;Daniel Friedman\&quot; :birth-year 1944})\n(def felleisen {:name \&quot;Matthias Felleisen\&quot;})\n\n(def cities {:title \&quot;The City and the City\&quot; :authors [china]})\n(def wild-seed {:title \&quot;Wild Seed\&quot;, :authors [octavia]})\n(def embassytown {:title \&quot;Embassytown\&quot;, :authors [china]})\n(def little-schemer {:title \&quot;The Little Schemer\&quot;\n                     :authors [friedman, felleisen]})&quot; &quot;(title-length little-schemer)&quot; &quot;(conj [] \\b)&quot; &quot;little-schemer&quot; &quot;(clojure.repl/doc concat)&quot; &quot;(concat [1] [3 5] [1 4])&quot; &quot;(second-elements [[1 2 3 4] [1] [\&quot;a\&quot; \&quot;s\&quot; \&quot;d\&quot; \&quot;f\&quot;]])&quot; &quot;(element-lengths [\&quot;foo\&quot; \&quot;bar\&quot; \&quot;\&quot; \&quot;quux\&quot;]) &quot; &quot;books&quot; &quot;q&quot; &quot;books-&gt;string&quot; &quot;(titles [cities])&quot; &quot;(stars 5)&quot; &quot;(monotonic? [3 2 0 -3])&quot; &quot;(monotonic? [0 1 10 11])&quot; &quot;(monotonic? [1 2 1 0])&quot; &quot;  (toggle #{1 2 3} 3)&quot; &quot;(toggle #{1 2 3} 3)&quot; &quot;(toggle #{1 2} 3)&quot; &quot;(contains-duplicates? [])&quot; &quot;(contains-duplicates? [1])&quot; &quot;(contains-duplicates? [1 1])&quot; &quot;(contains-duplicates? [1 2 3 \&quot;a\&quot; \&quot;a\&quot;])&quot; &quot;(old-book-&gt;new-book {:title \&quot;The Little Schemer\&quot;\n                     :authors [friedman, felleisen]})&quot; &quot;true&quot; &quot;(def china {:name \&quot;China Miéville\&quot;, :birth-year 1972})\n(def octavia {:name \&quot;Octavia E. Butler\&quot;\n              :birth-year 1947\n              :death-year 2006})\n(def friedman {:name \&quot;Daniel Friedman\&quot; :birth-year 1944})\n(def felleisen {:name \&quot;Matthias Felleisen\&quot;})\n\n(def cities {:title \&quot;The City and the City\&quot; :authors #{china}})\n(def wild-seed {:title \&quot;Wild Seed\&quot;, :authors #{octavia}})\n(def embassytown {:title \&quot;Embassytown\&quot;, :authors #{china}})\n(def little-schemer {:title \&quot;The Little Schemer\&quot;\n                     :authors #{friedman, felleisen}})\n\n(def books [cities, wild-seed, embassytown, little-schemer])&quot; &quot;china&quot; &quot;cities&quot; &quot;(authors [cities, wild-seed])&quot; &quot;(all-author-names [cities, wild-seed])&quot; &quot;(str \\a nil \\b)&quot; &quot;friedman&quot; &quot;(def china {:name \&quot;China Miéville\&quot;, :birth-year 1972})\n(def octavia {:name \&quot;Octavia E. Butler\&quot;\n              :birth-year 1947\n              :death-year 2006})\n(def friedman {:name \&quot;Daniel Friedman\&quot; :birth-year 1944})\n(def felleisen {:name \&quot;Matthias Felleisen\&quot;})&quot; &quot;(author-&gt;string friedman)&quot; &quot;(def little-schemer {:title \&quot;The Little Schemer\&quot;\n                     :authors #{friedman, felleisen}})&quot; &quot;(authors-&gt;string (:authors little-schemer))&quot;], :remote []}}</component>
</project>

